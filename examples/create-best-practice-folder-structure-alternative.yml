# https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html#alternative-directory-layout
---
- hosts: localhost
  name: Setup Ansible best practice alternative directory structure.
  become: no
  vars:
    working_path: "{{ ansible_facts['env']['HOME'] }}/tmp/ansible"
    base_directories:
      - inventories # all inventory files go here
      #- library # if any custom modules, put them here (optional)
      #- module_utils # if any custom module_utils to support modules, put   em here (optional)
      #- filter_plugins # if any custom filter plugins, put them here   ptional)
      - roles # all roles go here
      - playbooks # all playbooks go here
    environment_directories:
      - dev-test
      - staging
      - production
    group_playbook_files:
      - hadoop-cluster.yml
      - hadoop-master.yml
      - hadoop-slaves.yml
    var_directories:
      - group_vars
      - host_vars
    group_vars_files: # custom variables for groups
      - hadoop-cluster.yml
      - hadoop-master.yml
      - hadoop-slaves.yml
    host_vars_files: # custom variables for hosts
      - hadoop-master.namenode.yml
      - hadoop-slave.datanode01.yml
      - hadoop-slave.datanode02.yml
    my_roles:
      - common # all, thus covering hadoop-cluster
      - hadoop-master
      - hadoop-slave
    role_directories: # All roles have these directories
      - tasks # smaller files for tasks
      #- handlers # handler files
      - templates # end with .j2
      - files # files for copying or scripts
      - vars # role specific variables
      - defaults # low precedence variables for this role
      - meta # role dependencies
      #- library # custom modules
      #- module_utils # custom modules uilities
      #- plugins # custom plugins

  tasks:
    #- debug:
    #    msg: "working_path is {{ working_path }}"
    #- debug:
    #    msg: "my_roles is {{ my_roles }}"
    #- debug:
    #    msg: "role_directories is {{ role_directories }}"

    - name: Create the base directory structure.
      file:
        path: "{{ working_path }}/{{ item }}"
        state: directory
        mode: 0775
      # https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#with-items
      loop: "{{ base_directories|flatten(levels=1) }}"

    - name: Create the master playbook file.
      file: # master file
        path: "{{ working_path }}/playbooks/master-playbook.yml"
        state: touch
        mode: 0644

    - name: Create the group playbook files.
      file: # master file
        path: "{{ working_path }}/playbooks/{{ item }}"
        state: touch
        mode: 0644
      loop: "{{ group_playbook_files|flatten(levels=1) }}"

      # https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#with-nested-with-cartesian
    - name: Create the nested 'roles' directory structure.
      #debug:
      #  msg: "{{ item.0 }}/{{ item.1 }}"
      file:
        path: "{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}"
        state: directory
        mode: 0775
      loop: "{{ my_roles|product(role_directories)|list }}"

    - name: Create nested main.yml files.
      file:
        path: "{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}/main.yml"
        state: touch
        mode: 0644
      loop: "{{ my_roles|product(role_directories)|list }}"

      # https://docs.ansible.com/ansible/latest/user_guide/playbooks_conditionals.html#the-when-statement
      # TO DO: Fix the Jinga2 warning created here.
      when: ("{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}" == "{{ working_path }}/roles/{{ item.0 }}/tasks") or
            ("{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}" == "{{ working_path }}/roles/{{ item.0 }}/handlers") or
            ("{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}" == "{{ working_path }}/roles/{{ item.0 }}/vars") or
            ("{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}" == "{{ working_path }}/roles/{{ item.0 }}/defaults") or
            ("{{ working_path }}/roles/{{ item.0 }}/{{ item.1 }}" == "{{ working_path }}/roles/{{ item.0 }}/meta")

    - name: Create environment directories..
      file:
        path: "{{ working_path }}/inventories/{{ item }}"
        state: directory
        mode: 0755
      loop: "{{ environment_directories|flatten(levels=1) }}"

    - name: Create enviroment host files.
      file:
        path: "{{ working_path }}/inventories/{{ item }}/hosts.ini"
        state: touch
        mode: 0644
      loop: "{{ environment_directories|flatten(levels=1) }}"

    - name: Create the nested 'var' directory structure.
      file:
        path: "{{ working_path }}/inventories/{{ item.0 }}/{{ item.1 }}"
        state: directory
        mode: 0775
      loop: "{{ environment_directories|product(var_directories)|list }}"

    - name: Create nested group_vars files.
      file:
        path: "{{ working_path }}/inventories/{{ item.0 }}/group_vars/{{ item.1 }}"
        state: touch
        mode: 0644
      loop: "{{ environment_directories|product(group_vars_files)|list }}"

    - name: Create nested host_vars files.
      file:
        path: "{{ working_path }}/inventories/{{ item.0 }}/host_vars/{{ item.1 }}"
        state: touch
        mode: 0644
      loop: "{{ environment_directories|product(host_vars_files)|list }}"
